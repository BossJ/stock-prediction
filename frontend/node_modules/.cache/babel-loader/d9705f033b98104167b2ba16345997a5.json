{"ast":null,"code":"import http from \"../http-common\"; // We create a data service that uses axios object to send HTTP requests.\n\nclass CompanyDataService {\n  getAll() {\n    return http.get(\"/companies\");\n  }\n\n  get(id) {\n    return http.get(`/companies/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/companies\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/companies/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/companies/${id}`);\n  }\n\n  deleteAll() {\n    return http.delete(`/companies`);\n  }\n\n  findByName(name) {\n    return http.get(`/companies?name=${name}`);\n  }\n\n}\n\nexport default new CompanyDataService();","map":{"version":3,"sources":["/Users/kento/Desktop/dev/codedaylabs/stock-prediction/frontend/src/services/company.service.js"],"names":["http","CompanyDataService","getAll","get","id","create","data","post","update","put","delete","deleteAll","findByName","name"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,gBAAjB,C,CAEA;;AACA,MAAMC,kBAAN,CAAyB;AACvBC,EAAAA,MAAM,GAAG;AACP,WAAOF,IAAI,CAACG,GAAL,CAAS,YAAT,CAAP;AACD;;AAEDA,EAAAA,GAAG,CAACC,EAAD,EAAK;AACN,WAAOJ,IAAI,CAACG,GAAL,CAAU,cAAaC,EAAG,EAA1B,CAAP;AACD;;AAEDC,EAAAA,MAAM,CAACC,IAAD,EAAO;AACX,WAAON,IAAI,CAACO,IAAL,CAAU,YAAV,EAAwBD,IAAxB,CAAP;AACD;;AAEDE,EAAAA,MAAM,CAACJ,EAAD,EAAKE,IAAL,EAAW;AACf,WAAON,IAAI,CAACS,GAAL,CAAU,cAAaL,EAAG,EAA1B,EAA6BE,IAA7B,CAAP;AACD;;AAEDI,EAAAA,MAAM,CAACN,EAAD,EAAK;AACT,WAAOJ,IAAI,CAACU,MAAL,CAAa,cAAaN,EAAG,EAA7B,CAAP;AACD;;AAEDO,EAAAA,SAAS,GAAG;AACV,WAAOX,IAAI,CAACU,MAAL,CAAa,YAAb,CAAP;AACD;;AAEDE,EAAAA,UAAU,CAACC,IAAD,EAAO;AACf,WAAOb,IAAI,CAACG,GAAL,CAAU,mBAAkBU,IAAK,EAAjC,CAAP;AACD;;AA3BsB;;AA8BzB,eAAe,IAAIZ,kBAAJ,EAAf","sourcesContent":["import http from \"../http-common\";\n\n// We create a data service that uses axios object to send HTTP requests.\nclass CompanyDataService {\n  getAll() {\n    return http.get(\"/companies\");\n  }\n\n  get(id) {\n    return http.get(`/companies/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/companies\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/companies/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/companies/${id}`);\n  }\n\n  deleteAll() {\n    return http.delete(`/companies`);\n  }\n\n  findByName(name) {\n    return http.get(`/companies?name=${name}`);\n  }\n}\n\nexport default new CompanyDataService();"]},"metadata":{},"sourceType":"module"}