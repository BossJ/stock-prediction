{"ast":null,"code":"var _jsxFileName = \"/Users/kento/Desktop/dev/codedaylabs/stock-prediction/frontend/src/components/company.component.js\";\nimport React, { Component } from \"react\";\nimport CompanyDataService from \"../services/company.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Company extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeName = this.onChangeName.bind(this);\n    this.onChangeRating = this.onChangeRating.bind(this);\n    this.getCompany = this.getCompany.bind(this);\n    this.updateChosen = this.updateChosen.bind(this);\n    this.updateCompany = this.updateCompany.bind(this);\n    this.deleteCompany = this.deleteCompany.bind(this);\n    this.state = {\n      currentCompany: {\n        id: null,\n        Name: \"\",\n        rating: \"\",\n        chosen: false\n      },\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getCompany(this.props.match.params.id);\n  }\n\n  onChangeName(e) {\n    const name = e.target.value;\n    this.setState(function (prevState) {\n      return {\n        currentCompany: { ...prevState.currentCompany,\n          name: name\n        }\n      };\n    });\n  }\n\n  onChangeRating(e) {\n    const rating = e.target.value;\n    this.setState(prevState => ({\n      currentCompany: { ...prevState.currentCompany,\n        rating: rating\n      }\n    }));\n  }\n\n  getCompany(id) {\n    CompanyDataService.get(id).then(response => {\n      this.setState({\n        currentCompany: response.data\n      });\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  updateChosen(status) {\n    var data = {\n      id: this.state.currentCompany.id,\n      name: this.state.currentCompany.name,\n      rating: this.state.currentCompany.rating,\n      chosen: status\n    };\n    CompanyDataService.update(this.state.currentCompany.id, data).then(response => {\n      this.setState(prevState => ({\n        currentCompany: { ...prevState.currentCompany,\n          chosen: status\n        }\n      }));\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  updateCompany() {\n    CompanyDataService.update(this.state.currentCompany.id, this.state.currentCompany).then(response => {\n      console.log(response.data);\n      this.setState({\n        message: \"The company was updated successfully!\"\n      });\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  deleteCompany() {\n    CompanyDataService.delete(this.state.currentCompany.id).then(response => {\n      console.log(response.data);\n      this.props.history.push('/companies');\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  render() {\n    const {\n      currentCompany\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: currentCompany ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Company\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"name\",\n              value: currentCompany.name,\n              onChange: this.onChangeName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"rating\",\n              children: \"Rating\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"rating\",\n              value: currentCompany.rating,\n              onChange: this.onChangeRating\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 25\n            }, this), currentCompany.chosen ? \"Chosen\" : \"Pending\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }, this), currentCompany.chosen ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"badge badge-primary mr-2\",\n          onClick: () => this.updateChosen(false),\n          children: \"UnPublish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"badge badge-primary mr-2\",\n          onClick: () => this.updateChosen(true),\n          children: \"Publish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"badge badge-danger mr-2\",\n          onClick: this.deleteCompany,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"badge badge-success\",\n          onClick: this.updateCompany,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please click on a Company...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/kento/Desktop/dev/codedaylabs/stock-prediction/frontend/src/components/company.component.js"],"names":["React","Component","CompanyDataService","Company","constructor","props","onChangeName","bind","onChangeRating","getCompany","updateChosen","updateCompany","deleteCompany","state","currentCompany","id","Name","rating","chosen","message","componentDidMount","match","params","e","name","target","value","setState","prevState","get","then","response","data","console","log","catch","status","update","delete","history","push","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport CompanyDataService from \"../services/company.service\";\n\nexport default class Company extends Component {\n    constructor(props) {\n        super(props);\n        this.onChangeName = this.onChangeName.bind(this);\n        this.onChangeRating = this.onChangeRating.bind(this);\n        this.getCompany = this.getCompany.bind(this);\n        this.updateChosen = this.updateChosen.bind(this);\n        this.updateCompany = this.updateCompany.bind(this);\n        this.deleteCompany = this.deleteCompany.bind(this);\n\n        this.state = {\n            currentCompany: {\n                id: null,\n                Name: \"\",\n                rating: \"\",\n                chosen: false\n            },\n            message: \"\"\n        };\n    }\n\n    componentDidMount() {\n        this.getCompany(this.props.match.params.id);\n    }\n\n    onChangeName(e) {\n        const name = e.target.value;\n\n        this.setState(function(prevState) {\n            return {\n                currentCompany: {\n                ...prevState.currentCompany,\n                name: name\n                }\n            };\n        });\n    }\n\n    onChangeRating(e) {\n        const rating = e.target.value;\n        \n        this.setState(prevState => ({\n            currentCompany: {\n                ...prevState.currentCompany,\n                rating: rating\n            }\n        }));\n    }\n\n    getCompany(id) {\n        CompanyDataService.get(id)\n        .then(response => {\n            this.setState({\n                currentCompany: response.data\n            });\n            console.log(response.data);\n        })\n        .catch(e => {\n            console.log(e);\n        });\n    }\n\n    updateChosen(status) {\n        var data = {\n            id: this.state.currentCompany.id,\n            name: this.state.currentCompany.name,\n            rating: this.state.currentCompany.rating,\n            chosen: status\n        };\n\n        CompanyDataService.update(this.state.currentCompany.id, data)\n        .then(response => {\n            this.setState(prevState => ({\n                currentCompany: {\n                    ...prevState.currentCompany,\n                    chosen: status\n                }\n            }));\n            console.log(response.data);\n        })\n        .catch(e => {\n            console.log(e);\n        });\n    }\n\n    updateCompany() {\n        CompanyDataService.update(\n            this.state.currentCompany.id,\n            this.state.currentCompany\n        )\n        .then(response => {\n            console.log(response.data);\n            this.setState({\n                message: \"The company was updated successfully!\"\n            });\n        })\n        .catch(e => {\n            console.log(e);\n        });\n    }\n\n    deleteCompany() {    \n        CompanyDataService.delete(this.state.currentCompany.id)\n            .then(response => {\n                console.log(response.data);\n                this.props.history.push('/companies')\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    render() {\n        const { currentCompany } = this.state;\n\n        return (\n        <div>\n            {currentCompany ? (\n            <div className=\"edit-form\">\n                <h4>Company</h4>\n                <form>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"name\">Name</label>\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"name\"\n                            value={currentCompany.name}\n                            onChange={this.onChangeName}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"rating\">Rating</label>\n                        <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"rating\"\n                            value={currentCompany.rating}\n                            onChange={this.onChangeRating}\n                        />\n                    </div>\n        \n                    <div className=\"form-group\">\n                        <label>\n                            <strong>Status:</strong>\n                        </label>\n                        {currentCompany.chosen ? \"Chosen\" : \"Pending\"}\n                    </div>\n                </form>\n    \n                {currentCompany.chosen ? (\n                    <button\n                        className=\"badge badge-primary mr-2\"\n                        onClick={() => this.updateChosen(false)}\n                    >\n                        UnPublish\n                    </button>\n                ) : (\n                    <button\n                        className=\"badge badge-primary mr-2\"\n                        onClick={() => this.updateChosen(true)}\n                    >\n                        Publish\n                    </button>\n                )}\n    \n                <button\n                    className=\"badge badge-danger mr-2\"\n                    onClick={this.deleteCompany}\n                >\n                    Delete\n                </button>\n    \n                <button\n                    type=\"submit\"\n                    className=\"badge badge-success\"\n                    onClick={this.updateCompany}\n                >\n                    Update\n                </button>\n                <p>{this.state.message}</p>\n            </div>\n            ) : (\n            <div>\n                <br />\n                <p>Please click on a Company...</p>\n            </div>\n            )}\n        </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}